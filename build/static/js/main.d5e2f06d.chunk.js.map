{"version":3,"sources":["keyboard/view/constants.js","keyboard/Tools.js","keyboard/view/normal.js","keyboard/actions.js","keyboard/actionTypes.js","keyboard/reducer.js","panel/view/panel.js","Store.js","App.js","index.js"],"names":["normalKeyboard","value","type","prior","+","-","*","/","(",")","setWidth","digit","n","arguments","length","undefined","Math","round","pow","sciNotation","ret","abs","power","floor","log","base","concat","calInFixExpression","inFixArr","postFix","result","temp1","temp2","Array","isArray","forEach","item","isNaN","match","pop","push","parseFloat","calPostFix","operatorArr","postFixArr","stackTopPrior","console","toPostFix","Normal","generateKeyboard","idx","map","react_default","a","createElement","key","className","onClick","this","props","onclick","React","Component","connect","dispatch","e","target","tagName","toLowerCase","node","classList","contains","text","innerText","data","operator","replace","math_type","func_type","handleClick","reducer","state","action","str","lastOperatorIsEqual","indexOf","Object","objectSpread","arr","temp","split","join","Panel","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","clickLeft","setState","e_right","parseInt","clickRight","node_str","document","querySelector","node_wrap","node_right","node_left","offsetLeft","remove","offsetWidth","expression","add","nextProps","nextState","style","right","createStore","App","parentElement","querySelectorAll","activeLink","window","location","hash","process","es","store","panel","HashRouter","Link","to","Switch","Route","path","component","Keyboards","Redirect","exact","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.d5e2f06d.chunk.js","sourcesContent":["export const normalKeyboard = [\r\n    {value:'CE',type:'operator clear',},\r\n    {value:'%',type:'operator percent',},\r\n    {value:'DEL',type:'operator delete',},\r\n    {value:'÷',type:'math-operator divide',},\r\n    {value:'7',type:'number',},\r\n    {value:'8',type:'number',},\r\n    {value:'9',type:'number',},\r\n    {value:'×',type:'math-operator multiply',},\r\n    {value:'4',type:'number',},\r\n    {value:'5',type:'number',},\r\n    {value:'6',type:'number',},\r\n    {value:'-',type:'math-operator minus',},\r\n    {value:'1',type:'number',},\r\n    {value:'2',type:'number',},\r\n    {value:'3',type:'number',},\r\n    {value:'+',type:'math-operator add',},\r\n    {value:'±',type:'operator toggle',},\r\n    {value:'0',type:'number',},\r\n    {value:'.',type:'number dot',},\r\n    {value:'=',type:'math-operator equal',}\r\n];\r\nexport const scienceKeyboard = [\r\n  {value:'x^2',},\r\n  {value:'x^y',},\r\n  {value:'sin',},\r\n  {value:'cos',},\r\n  {value:'tan',},\r\n  {value:'√',},\r\n  {value:'10^x',},\r\n  {value:'log',},\r\n  {value:'Exp',},\r\n  {value:'Mod',},\r\n  {value:'CE',},\r\n  {value:'DEL',},\r\n  {value:'÷',},\r\n  {value:'π',},\r\n\r\n];\r\n","import * as actions from './actions.js';\r\n\r\nexport const handleClick = (node)=>{\r\n  if(node.classList.contains('number')){\r\n\r\n    let text= node.innerText;\r\n    return actions.num(text);\r\n\r\n  }else if(node.classList.contains('math-operator')){\r\n\r\n    let operator = node.classList.value.replace(/math-operator/,'').replace(/^\\s+|\\s+$/g,'');\r\n    return actions.math(operator);\r\n\r\n  }else if(node.classList.contains('operator')){\r\n\r\n    let operator = node.classList.value.replace(/operator/,'').replace(/^\\s+|\\s+$/g,'');\r\n    return actions.func(operator);\r\n    \r\n  }\r\n}\r\n\r\n\r\nconst prior = {\r\n  \"+\": 1,\r\n  \"-\": 1,\r\n  \"*\": 2,\r\n  \"/\": 2,\r\n  \"(\": 20,\r\n  \")\": 20\r\n};\r\nconst toPostFix = inFixArr => {\r\n  let arr = inFixArr;\r\n  let operatorArr = [];\r\n  let postFixArr = [];\r\n  let stackTopPrior = 0;\r\n  arr.forEach(item => {\r\n    if (!isNaN(item)) {\r\n      postFixArr.push(item);\r\n    } else if (item.match(/^[+\\-*/]$/)) {\r\n      while (prior[item] <= stackTopPrior) {\r\n        if (operatorArr[operatorArr.length - 1] === \"(\") break;\r\n\r\n        postFixArr.push(operatorArr.pop());\r\n        if (operatorArr.length > 0) {\r\n          stackTopPrior = prior[operatorArr[operatorArr.length - 1]];\r\n        } else {\r\n          stackTopPrior = 0;\r\n        }\r\n      }\r\n\r\n      operatorArr.push(item);\r\n      stackTopPrior = prior[item];\r\n    } else if (item === \"(\") {\r\n      operatorArr.push(item);\r\n      stackTopPrior = prior[item];\r\n    } else if (item === \")\") {\r\n      while (\r\n        operatorArr[operatorArr.length - 1] !== \"(\" &&\r\n        operatorArr.length > 0\r\n      ) {\r\n        postFixArr.push(operatorArr.pop());\r\n      }\r\n      if (operatorArr.length === 0) {\r\n        stackTopPrior = 0;\r\n        console.log(\"未找到匹配的左括号\");\r\n        return \"未找到匹配的左括号\";\r\n      } else {\r\n        operatorArr.pop();\r\n        stackTopPrior = prior[operatorArr[operatorArr.length - 1]];\r\n      }\r\n    }\r\n  });\r\n  //判断读完中缀表达式后，操作符数组里面是否还有内容\r\n  while (operatorArr.length > 0) {\r\n    if (operatorArr[operatorArr.length - 1] === \"(\") {\r\n      console.log(operatorArr);\r\n      return \"剩余左括号\";\r\n    } else {\r\n      postFixArr.push(operatorArr.pop());\r\n    }\r\n  }\r\n\r\n  console.log(postFixArr);\r\n  return postFixArr;\r\n};\r\n\r\nconst calPostFix = postFix => {\r\n  let result = [];\r\n  let temp1 = 0;\r\n  let temp2 = 0;\r\n  if (Array.isArray(postFix)) {\r\n    //是数组\r\n    postFix.forEach(item => {\r\n      if (!isNaN(item)) {\r\n        result.push(parseFloat(item));\r\n      } else if (item.match(/^[+\\-*/]$/)) {\r\n        if (result.length < 2) return \"没有足够的操作数\";\r\n        temp2 = result.pop();\r\n        temp1 = result.pop();\r\n        switch (item) {\r\n          case \"+\":\r\n            result.push(temp1 + temp2);\r\n            break;\r\n          case \"-\":\r\n            result.push(temp1 - temp2);\r\n            break;\r\n          case \"*\":\r\n            result.push(temp1 * temp2);\r\n            break;\r\n          case \"/\":\r\n            result.push(temp1 / temp2);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    });\r\n    return sciNotation(result[0]);\r\n  } else {\r\n    //不是数组\r\n    return postFix;\r\n  }\r\n};\r\n\r\n//将一个正数小数的小数位数进行截取\r\nconst setWidth = (digit,n=5)=>{\r\n  return Math.round(digit * Math.pow(10,n))/Math.pow(10,n);\r\n} \r\n\r\n//对数据进行科学转换\r\nexport const sciNotation = (digit) => {\r\n  let ret = 0;\r\n  // > 10^5 记为 1.234567e5\r\n  if(Math.abs(digit) > Math.pow(10,5)){\r\n    let power = Math.floor(Math.log(Math.abs(digit))/Math.log(10));\r\n    let base = Math.abs(digit)/Math.pow(10,power);\r\n    base = setWidth(base,7);\r\n    ret = digit>0 ? `${base}e${power}`:`-${base}e${power}`;\r\n  }else if(Math.abs(digit) < 1){\r\n    if((Math.abs(digit)+'').length > 10){\r\n      let base = setWidth(Math.abs(digit),8);\r\n      ret = digit>0 ? `${base}`:`-${base}`;\r\n    }else{\r\n      ret = digit +'';\r\n    } \r\n  }else{\r\n    //9999.9999999\r\n    if((Math.abs(digit)+'').length > 12){\r\n     let base = setWidth(Math.abs(digit),5);\r\n     ret = digit>0 ? `${base}`:`-${base}`;\r\n    }else{\r\n      ret = digit+'';\r\n    }\r\n  }\r\n\r\n\r\n  return ret;\r\n}\r\n\r\n\r\nexport const calInFixExpression = (inFixArr=[])=>{\r\n  if(inFixArr.length ===0) return '';\r\n  if(inFixArr.length ===1) return inFixArr[0];\r\n  let postFixArr = toPostFix(inFixArr);\r\n  return  calPostFix(postFixArr);\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {normalKeyboard} from './constants.js';\r\nimport { handleClick }from '../Tools.js'\r\nimport './style.css';\r\n\r\nclass Normal extends React.Component {\r\n\r\n  generateKeyboard = ()=>{\r\n    let idx = 1;\r\n    return normalKeyboard.map((item) => {\r\n      return (\r\n        <li key={idx++} className={item.type}>\r\n          {item.value}\r\n        </li>\r\n      );\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <ul className=\"normalKeyLists\" onClick={this.props.onclick}>\r\n          {this.generateKeyboard()}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onclick: (e)=>{\r\n      let target = e.target;\r\n      if(target.tagName.toLowerCase()==='li'){\r\n        dispatch(handleClick(target));\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Normal);","import * as actionTypes from './actionTypes.js';\r\n\r\n\r\nexport const math = (math_type)=>({\r\n  type: actionTypes.CLICK_MATH_OPERATOR,\r\n  math_type\r\n})\r\n\r\nexport const num = (data)=> ({\r\n  type: actionTypes.CLICK_NUM,\r\n  data\r\n})\r\n\r\nexport const func = (func_type)=> ({\r\n  type: actionTypes.CLICK_FUNC_OPERATOR,\r\n  func_type\r\n})\r\n","export const  CLICK_NUM = \"CLICK/NUM\";\r\nexport const CLICK_MATH_OPERATOR = \"CLICK/MATH-OPERATOR\";\r\nexport const CLICK_FUNC_OPERATOR = \"CLICK/FUNC-OPERATOR\";","import * as actionTypes from './actionTypes.js';\r\nimport {calInFixExpression,sciNotation} from './Tools.js';\r\n\r\nconst reducer = (state,action)=>{\r\n  if(!state) return {str:[],result:'',lastOperatorIsEqual:false};\r\n  switch(action.type){\r\n    case actionTypes.CLICK_NUM:{\r\n      //当前输入为'.' 且result中已经有'.' 则不做操作\r\n      if((action.data === '.') && (state.result.indexOf('.') !== -1)) return state;\r\n      // result的长度已经达到10，则不做操作\r\n      if(state.result.length === 10) return state;\r\n      if(!state.lastOperatorIsEqual){\r\n        //上一个操作符不是 =\r\n        return {\r\n          ...state,\r\n          result : state.result === '' && action.data === '.'?'0.':(state.result+action.data),\r\n        };\r\n      }else{\r\n        //上一个操作符是 =\r\n        return {\r\n          ...state,\r\n          result: action.data==='.'?'0.':action.data,\r\n          lastOperatorIsEqual:false\r\n        }\r\n      }\r\n      \r\n    }\r\n    case  actionTypes.CLICK_MATH_OPERATOR:{\r\n      let arr = state.str;\r\n      if((arr.length === 0)&&(state.result ==='')){\r\n        arr.push('0')\r\n      }else if(state.result === ''){\r\n        arr.pop();\r\n      }else{\r\n        arr.push(parseFloat(state.result)+'')\r\n      }\r\n      switch(action.math_type){\r\n        case 'add':{\r\n          arr.push('+');\r\n          return {\r\n            ...state,\r\n            str: arr ,\r\n            result:'',\r\n            lastOperatorIsEqual:false\r\n          };\r\n        }\r\n        case 'minus':{\r\n          arr.push('-');\r\n          return {\r\n            ...state,\r\n            str: arr ,\r\n            result:'',\r\n            lastOperatorIsEqual:false\r\n          };\r\n        }\r\n        case 'divide':{\r\n          arr.push('/');\r\n          return {\r\n            ...state,\r\n            str: arr ,\r\n            result:'',\r\n            lastOperatorIsEqual:false\r\n          };\r\n        }\r\n        case 'multiply':{\r\n          arr.push('*');\r\n          return {\r\n            ...state,\r\n            str: arr ,\r\n            result:'',\r\n            lastOperatorIsEqual:false\r\n          };\r\n        }\r\n        case 'equal':{\r\n          let temp = calInFixExpression(state.str)\r\n          return {\r\n            ...state,\r\n            str:[],\r\n            result:temp,\r\n            lastOperatorIsEqual:true\r\n          }; \r\n        }\r\n        default:return state;\r\n      }\r\n    }\r\n    case actionTypes.CLICK_FUNC_OPERATOR:{\r\n      switch(action.func_type){\r\n        case 'clear':{\r\n          return {\r\n            ...state,\r\n            str:[],\r\n            result:'',\r\n            lastOperatorIsEqual:false\r\n          };\r\n        }\r\n        case 'percent':{\r\n          if(state.result === '') return state;\r\n          return {\r\n            ...state,\r\n            result: sciNotation(parseFloat(state.result) * 0.01),\r\n            lastOperatorIsEqual:false\r\n          };\r\n        }\r\n        case 'delete':{\r\n          if(state.result === '') return state;\r\n          let temp = state.result.split('');\r\n          temp.pop();\r\n          return {\r\n            ...state,\r\n            result:temp.join(''),\r\n            lastOperatorIsEqual:false\r\n          }\r\n        }\r\n        case 'toggle':{\r\n          if(state.result === '') return state;\r\n          let temp = (0-parseFloat(state.result))+'';\r\n          return {\r\n            ...state,\r\n            result:temp,\r\n            lastOperatorIsEqual:false\r\n          };\r\n        }\r\n        default:return state;\r\n      }\r\n    }\r\n    default:return state;\r\n  }\r\n}\r\n\r\n\r\nexport default reducer;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './style.css'\r\n\r\nclass Panel extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      e_right: '0px'\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.node_str = document.querySelector('.expression');\r\n    this.node_wrap = document.querySelector('.text-wrap');\r\n    this.node_right =  document.querySelector('.arrow.right');\r\n    this.node_left =  document.querySelector('.arrow.left');\r\n  }\r\n\r\n  componentWillUpdate(){\r\n    if(this.node_str.offsetLeft > 0){\r\n      if(this.node_left.classList.contains('active')){\r\n        this.node_left.classList.remove('active');\r\n      }\r\n    }\r\n    if(this.node_wrap.offsetWidth - this.node_str.offsetLeft > this.node_str.offsetWidth ){\r\n      if(this.node_right.classList.contains('active')){\r\n        this.node_right.classList.remove('active');\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.expression !== ''){\r\n      //offsetWidth 包括边框，clientWidth不包括边框\r\n      if(this.node_str.offsetWidth > this.node_wrap.offsetWidth){\r\n        if(this.node_wrap.offsetWidth - this.node_str.offsetLeft +10 >this.node_str.offsetWidth ){\r\n          if(!this.node_left.classList.contains('active')){\r\n            this.node_left.classList.add('active');\r\n          }\r\n        }else{\r\n          if(!this.node_right.classList.contains('active')){\r\n            this.node_right.classList.add('active');\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (nextProps.expression !== this.props.expression) ||\r\n           (nextProps.result !== this.props.result) ||\r\n           (nextState.e_right !== this.state.e_right);\r\n  }\r\n\r\n  clickLeft = () => {\r\n    this.setState({\r\n      e_right: (parseInt(this.state.e_right)- 10)+'px'\r\n    })\r\n  }\r\n\r\n  clickRight = ()=> {\r\n    this.setState({\r\n      e_right: (parseInt(this.state.e_right)+ 10)+'px'\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"panel\">\r\n        <div className=\"container\">\r\n          <span className=\"left arrow\" onClick={this.clickLeft}></span>\r\n          <span className=\"right arrow\" onClick={this.clickRight}></span> \r\n          <div className=\"text-wrap\">   \r\n            <div className=\"child expression\" style={{right: `${this.state.e_right}`}}>{this.props.expression}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-wrap\"> \r\n          <div className=\"child inputValue\">{this.props.result}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n  return ({\r\n    expression: state.str.join(''),\r\n    result: state.result\r\n  })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Panel);\r\n","import {createStore} from 'redux';\r\n\r\nimport {reducer} from './keyboard/'\r\n\r\nexport default createStore(reducer);\r\n\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Link,Redirect,Switch } from \"react-router-dom\";\nimport {Provider}  from 'react-redux';\nimport * as Keyboards from './keyboard/';\nimport {Panel} from './panel/';\nimport store from './Store.js';\n\nimport './App.css';\n\nclass App extends Component {\n\n  onclick = (e)=>{\n    let target = e.target;\n    [].forEach.call(target.parentElement.parentElement.querySelectorAll('.cmode'),node=>{\n      node.classList.remove('active');\n    });\n    target.classList.add('active');\n  }\n\n  componentDidMount(){\n    const activeLink = window.location.hash;\n    console.log(activeLink)\n    document.querySelectorAll('.cmode').forEach((node)=>{\n      if(node.classList.contains(activeLink.replace(/^#\\//,''))){\n        node.classList.add('active');\n      }\n    })\n    console.log(process.env)\n  }\n\n  render() {\n    return (\n      <Provider store = {store}>\n        <div className=\"App\">\n          <header>简易计算器</header>\n          <Panel/>\n          <Router>\n            <div>\n              <div className=\"mode\">\n                <Link to={`/normal`}><button className=\"normal cmode\" onClick={this.onclick}>标准</button></Link>\n                <span>|</span>\n                <Link to={`/science`}><button className=\"science cmode\" onClick={this.onclick}>科学</button></Link>\n              </div>\n              <Switch>\n                <Route path={`/normal`}   component={Keyboards.Normal} />            \n                <Redirect path={`/`} exact={true} to={`/normal`} />\n                <Redirect path={`/science`} exact={true} to={`/normal`} />\n              </Switch>\n            </div>\n          </Router>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}